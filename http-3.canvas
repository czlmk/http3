{
	"nodes":[
		{"id":"9be925b9bd4473ea","type":"text","text":"Problems to Solve","x":-640,"y":-1560,"width":220,"height":60},
		{"id":"8b9507da2455ac80","type":"text","text":"1. **TCP Head-of-Line Blocking**: Even though HTTP/2 introduced multiplexing (multiple requests and responses over a single connection), it was still susceptible to head-of-line blocking at the TCP level. If a single packet was lost, it would block all streams, even if the packet was only relevant to one of them. \n![[Pasted image 20230922092126.png]]\n\nhttps://cabulous.medium.com/http-3-quic-and-how-it-works-c5ffdb6735b4","x":-640,"y":-1480,"width":799,"height":480},
		{"id":"cbc78fcf60b6474e","type":"text","text":"2. **Connection Establishment and Handshake Overhead**: Establishing a secure connection using TCP and TLS requires multiple round-trips between the client and the server. This added latency, especially when a new connection was required. QUIC, on which HTTP/3 is built, provides a faster handshake process and supports zero round-trip time (0-RTT) resumption, \n\nhttps://blog.cloudflare.com/even-faster-connection-establishment-with-quic-0-rtt-resumption/\nhttps://blog.cloudflare.com/the-road-to-quic/#builtinsecurityandperformance\n\nhttps://medium.com/codavel-blog/quic-vs-tcp-tls-and-why-quic-is-not-the-next-big-thing-d4ef59143efd","x":200,"y":-1480,"width":897,"height":120},
		{"id":"46eae82299c4406e","type":"text","text":"![[Pasted image 20230922095438.png]]","x":200,"y":-1294,"width":311,"height":294},
		{"id":"ccb4726abfdbdde4","type":"text","text":"![[Pasted image 20230922100447.png]]","x":540,"y":-1294,"width":380,"height":334},
		{"id":"fcd975e3a34ab3fa","type":"text","text":"0-RTT","x":200,"y":-1344,"width":220,"height":50},
		{"id":"bdc14b62fbbe0b90","type":"text","text":"without 0-RTT","x":200,"y":-960,"width":250,"height":60},
		{"id":"4ea1961fcca2b497","type":"text","text":"![[Pasted image 20230922101205.png]]","x":540,"y":-899,"width":369,"height":359},
		{"id":"4d9edb5b3433551e","type":"text","text":"![[Pasted image 20230922101228.png]]","x":200,"y":-900,"width":337,"height":280},
		{"id":"d42d119cd907c059","type":"text","text":"3. **Connection Interruptions Due to Mobility**: When a user's IP address changes, such as when switching between Wi-Fi and cellular data, TCP connections would get terminated. QUIC is designed to handle such IP address or port changes, ensuring smoother transitions and reducing disruptions.","x":1120,"y":-1480,"width":800,"height":120},
		{"id":"37c14fdd9d5374a4","type":"text","text":"![[Pasted image 20230922102054.png]]\n\nhttps://pulse.internetsociety.org/blog/how-quic-helps-you-seamlessly-connect-to-different-networks","x":1120,"y":-1319,"width":459,"height":310},
		{"id":"849bd036635e9770","type":"text","text":"![[Pasted image 20230922102146.png]]","x":1600,"y":-1319,"width":440,"height":310},
		{"id":"3557d5bbae567abd","type":"text","text":"![[Pasted image 20230922110106.png]]","x":2081,"y":-1313,"width":519,"height":333},
		{"id":"9c4418bd806cd9c7","type":"text","text":"http structures\n![[Pasted image 20230922092305.png]]","x":-640,"y":-360,"width":620,"height":380},
		{"id":"1fc81f52c6564ad9","type":"text","text":"QUIC Frames\n![[Pasted image 20230922092809.png]]\n\neg.\nTLSv1.3 Record Layer: Handshake Protocol: Client Hello  \nFrame Type: CRYPTO (0x0000000000000006)  \nOffset: 0  \nLength: 314  \nCrypto Data  \nHandshake Protocol: Client Hello","x":20,"y":-360,"width":520,"height":400},
		{"id":"f733bfc784f2c09f","type":"text","text":"QUICK Packet\n![[Pasted image 20230922092456.png]]\n\nEG.\nQUIC IETF  \nQUIC Connection information  \n[Packet Length: 1350]  \n1... .... = Header Form: Long Header (1)  \n.1.. .... = Fixed Bit: True  \n..00 .... = Packet Type: Initial (0)  \n.... 00.. = Reserved: 0  \n.... ..00 = Packet Number Length: 1 bytes (0)  \nVersion: draft-29 (0xff00001d)  \nDestination Connection ID Length: 8  \nDestination Connection ID: 45fb5955dfaa8914  \nSource Connection ID Length: 0  \nToken Length: 0  \nLength: 1332  \nPacket Number: 1  \nPayload: 5a99e5b29413627619ca3b5add4cf8b6ce348355b1c1a2be9874c7961e7996a24aeec860â€¦  \nTLSv1.3 Record Layer: Handshake Protocol: Client Hello  \nPADDING Length: 997","x":-640,"y":40,"width":620,"height":540},
		{"id":"3798bc6ad8671574","type":"text","text":"HTTP/3 Frame\n![[Pasted image 20230922093142.png]]","x":20,"y":80,"width":560,"height":340},
		{"id":"9581018e15db6c04","x":-640,"y":-480,"width":250,"height":60,"type":"text","text":"HTTP 3 structure"},
		{"id":"f7cd1134a27e459e","x":605,"y":-360,"width":835,"height":440,"type":"text","text":"UDP Packet\n![[Pasted image 20230922141034.png]]\n"},
		{"id":"e468effcd7f2e409","x":2081,"y":-960,"width":579,"height":160,"type":"text","text":"![[Pasted image 20230922141343.png]]"},
		{"id":"8714977eaf00ad08","type":"text","text":"5. **Incorporate Advancements in TLS**: HTTP/3 mandates the use of TLS 1.3, the latest version of the Transport Layer Security protocol. TLS 1.3 offers enhanced security and performance over its predecessors.\n\t1. QUIC replaces the TLS record subprotocol using QUIC Packets and Frames\n\t2. All QUIC connections have to be HTTPS\nhttps://datatracker.ietf.org/doc/html/rfc9001\nhttps://edransit.medium.com/diving-into-http-3-security-congestion-control-and-tcp-comparisons-on-quic-protocol-5af5081a4043","x":2031,"y":-1474,"width":620,"height":161},
		{"id":"2fb4c4ca1a31ed2b","x":-640,"y":-1960,"width":250,"height":60,"type":"text","text":"Some differences"},
		{"id":"ec3955e1e22f4ac2","x":-640,"y":-1900,"width":569,"height":220,"type":"text","text":"Congestion Control\n* while HTTP/2's congestion controls (TCP) runs on the kernel's operating system, the congestion control for QUIC runs on user space, otherwise, both uses very similar algorithms\nhttps://edransit.medium.com/diving-into-http-3-security-congestion-control-and-tcp-comparisons-on-quic-protocol-5af5081a4043"}
	],
	"edges":[]
}